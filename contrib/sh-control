#!/usr/bin/env python3

import serial
import argparse

SHUTTERS = dict(
	balkon=49,
)

parser = argparse.ArgumentParser(
	description='Shutter Control',
)
parser.add_argument(
	'--shutter',
	type=str,
	nargs='?',
	default=None,
	help='shutter number',
)
parser.add_argument(
	'--up',
	action="store_true",
	default=False,
	help='shutter UP',
)
parser.add_argument(
	'--down',
	action="store_true",
	default=False,
	help='shutter DOWN',
)
parser.add_argument(
	'--halt',
	action="store_true",
	default=False,
	help='shutter HALT',
)
parser.add_argument(
	'--status',
	action="store_true",
	default=False,
	help='shutter STATUS',
)
args = parser.parse_args()

if args.shutter is None:
	print("Please supply a shutter name")
	print("configured shutters:")
	for n in SHUTTERS:
		print("  {}".format(n))
	exit()

if args.halt is False and args.down is False and args.up is False and args.status is False:
	print("Use of of the actions:")
	print(" --up")
	print(" --down")
	print(" --halt")

if args.shutter not in SHUTTERS.keys():
	print("Shutter {} not found in the configuration")
	exit()

action = 'HALT'

if args.down is True:
	action = 'DOWN'

if args.up is True:
	action = 'UP'

if args.status is True:
	action = 'STATUS'


command = "{};{}\n".format(
	SHUTTERS[args.shutter],
	action,
)

s = serial.Serial(
	port='/dev/ttyUSB0',
	baudrate=9600,
)

s.write(command.encode())
s.flush()
